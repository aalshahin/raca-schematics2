import { Component, Inject } from '@angular/core';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { AdminGenericDialog } from '@app/generics/admin-generic-dialog';
import { IDialogData } from '@app/interfaces/i-dialog-data';
import { <%=classify(name)%> } from '@app/models/<%=dasherize(name)%>';
import { LangService } from '@app/services/lang.service';
import { LookupService } from '@app/services/lookup.service';
import { ToastService } from '@app/services/toast.service';
import { DialogRef } from '@app/shared/models/dialog-ref';
import { DIALOG_DATA_TOKEN } from '@app/shared/tokens/tokens';
import { Observable, of } from 'rxjs';
import { OperationTypes } from '@app/enums/operation-types.enum';

@Component({
  selector: '<%=dasherize(name)%>-popup',
  templateUrl: './<%=dasherize(name)%>-popup.component.html',
  styleUrls: ['./<%=dasherize(name)%>-popup.component.scss']
})
export class <%=classify(name)%>PopupComponent extends AdminGenericDialog<<%=classify(name)%>> {
  form!: UntypedFormGroup;
  model!: <%=classify(name)%>;
  operation!: OperationTypes;

  constructor(public dialogRef: DialogRef,
              public fb: UntypedFormBuilder,
              public lang: LangService,
              private toast: ToastService,
              ) {
    super();
    this.model = data.model;
  }

  initPopup(): void {
  }

  buildForm(): void {
    this.form = this.fb.group(this.model.buildForm(true));
  }

  beforeSave(model: <%=classify(name)%>, form: UntypedFormGroup): Observable<boolean> | boolean {
    return form.valid;
  }

  saveFail(error: Error): void {
  }

  destroyPopup(): void {
  }

  afterSave(model: DeductionRatio2, dialogRef: DialogRef): void {
      throw new Error('Method not implemented.');
  }
  
  prepareModel(model: DeductionRatio2, form: UntypedFormGroup): DeductionRatio2 | Observable<DeductionRatio2> {
      throw new Error('Method not implemented.');
  }
}